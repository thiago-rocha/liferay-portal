// Generated by CoffeeScript 1.6.3
var IEVMLauncher, iectrl, name, _fn, _i, _len, _ref;

iectrl = require('iectrl');

IEVMLauncher = (function() {
  function IEVMLauncher(name, id) {
    this.name = name;
    this.id = id;
    this.vm = iectrl.IEVM.find(this.name)[0];
    this.wasRunning = false;
    this.captured = false;
  }

  IEVMLauncher.prototype.start = function(url) {
    var vmUrl,
      _this = this;
    vmUrl = ("" + url + "?id=" + this.id).replace('localhost', iectrl.IEVM.hostIp);
    return this.vm.running().then(function(running) {
      _this.wasRunning = running;
      if (running) {
        return _this.vm.open(vmUrl);
      }
      return _this.vm.start(true).then(function() {
        return _this.vm.open(vmUrl);
      });
    });
  };

  IEVMLauncher.prototype.kill = function(done) {
    var _this = this;
    return this.vm.close().then(function() {
      if (_this.wasRunning) {
        return done();
      }
      return _this.vm.stop().then(function() {
        return done();
      });
    });
  };

  IEVMLauncher.prototype.markCaptured = function() {
    return this.captured = true;
  };

  IEVMLauncher.prototype.isCaptured = function() {
    return this.captured;
  };

  return IEVMLauncher;

})();

_ref = iectrl.IEVM.names;
_fn = function(name) {
  return exports["launcher:" + name] = [
    'type', function(id) {
      return new IEVMLauncher(name, id);
    }
  ];
};
for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  name = _ref[_i];
  _fn(name);
}
